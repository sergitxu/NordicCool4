{"version":3,"sources":["elements/stepper/_stepper-base.scss","elements/stepper/_stepper-vertical.scss","settings/_variables.scss","elements/stepper/_stepper-transitions.scss","elements/stepper.scss","utilities/_mixins.scss","utilities/_functions.scss"],"names":[],"mappings":"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","file":"stepper.min.css","sourcesContent":["\r\n\r\n// Stepper\r\nbody.nav-space {   \r\n    @media (max-width: $screen-md-min) { \r\n        .stepper {\r\n            top: 115px;\r\n\r\n            + .container { margin-top: 115px; }\r\n        }\r\n    }\r\n} // this applies for the case where the top navigation has 2 levels\r\n\r\n\r\nbody {\r\n    @media (max-width: $screen-sm-min) { \r\n        .stepper {\r\n            top: 67px;\r\n\r\n            + .container { margin-top: 70px; }\r\n        }\r\n    }\r\n} \r\n\r\n\r\n.stepper {\r\n    @include make-container();\r\n    @include make-container-max-widths(); \r\n    margin: 0 auto 50px;\r\n    padding: 0 30px;\r\n    \r\n    @media (max-width: $screen-md-min) { \r\n        background: $white;\r\n        box-shadow: 0 2px 6px rgba($blue-90, 0.1);\r\n        position: absolute;\r\n        width: 100%;\r\n        max-width: 100%;\r\n        top: 65px;\r\n        left: 0;\r\n        height: 66px;\r\n\r\n        + .container { margin-top: 65px; }\r\n    }\r\n\r\n    ul {\r\n        display: flex;\r\n        flex-direction: row;\r\n        flex-wrap: nowrap;\r\n        position: relative;\r\n\r\n        @media (max-width: $screen-md-min) { \r\n            background: $white;\r\n            box-shadow: 0 2px 6px rgba($blue-90, 0.1);\r\n            padding: 11px 21px 10px 25px;\r\n            left: 50%;\r\n            transform: translateX(-50%);\r\n            width: auto;\r\n            display: inline-block;\r\n            height: 33px;\r\n            border-radius: 25px;\r\n            margin: 0 auto;\r\n            top: 48px;\r\n\r\n            &:before {\r\n                content: \"\";\r\n                width: 110%;\r\n                height: 17px;\r\n                background-color: $white;\r\n                position: absolute;\r\n                top: 1px;\r\n                display: block;\r\n                left: -5%;\r\n                z-index: 1;\r\n            }\r\n        }\r\n\r\n        > li {\r\n            position: relative;\r\n            cursor: pointer;\r\n            flex: 1;\r\n            margin: 0;\r\n            padding: 0;\r\n            display: inline-block;\r\n            height: 100%;\r\n            flex: 1 100%;\r\n            text-align: center;\r\n            cursor: default;\r\n            text-overflow: ellipsis;\r\n            white-space: nowrap;\r\n\r\n            @media (max-width: $screen-md-min) { \r\n                width: 9px;\r\n                right: auto;\r\n                left: auto;\r\n            }\r\n\r\n            > div {\r\n                white-space: normal;\r\n                text-align: left;\r\n            }\r\n\r\n            > a {\r\n                color: $primary-neutral;\r\n                font-size: $font-size-base;\r\n                text-decoration: none;\r\n                text-align: center;\r\n                outline: 0;\r\n                color: $neutral-80;\r\n                position: relative;\r\n                display: block;\r\n                width: 100%;\r\n                min-height: 75px;\r\n\r\n                @media (max-width: $screen-md-min) { \r\n                    margin: 0 0 10px 0;\r\n                    width: auto;\r\n                    min-height: auto;\r\n                }\r\n\r\n                &:before,\r\n                &:after {\r\n                    content: '';\r\n                    display: block;\r\n                    margin: 0 auto;\r\n                    position: absolute;\r\n                    top: auto;\r\n                    background: $neutral-50;\r\n                }\r\n\r\n                &:after {\r\n                    width: 100%;\r\n                    height: 3px;\r\n                    right: auto;\r\n                    left: auto;\r\n                    bottom: 17px;\r\n                    width: 100%;\r\n                    background-color: $neutral-50;\r\n\r\n                    @media (max-width: $screen-md-min) { \r\n                        display: none;\r\n                    }\r\n                }\r\n\r\n                &:before {\r\n                    width: 30px;\r\n                    height: 30px;\r\n                    border-radius: 30px;\r\n                    right: 0;\r\n                    left: auto;\r\n                    bottom: 4px;\r\n                    z-index: 20;\r\n\r\n                    @media (max-width: $screen-md-min) { \r\n                        width: 5px;\r\n                        height: 5px;\r\n                        bottom: auto;\r\n                        right: auto;\r\n                    }\r\n                }\r\n\r\n                span {\r\n                    position: absolute;\r\n                    max-width: 200px;\r\n                    text-align: center;\r\n                    left: auto;\r\n                    right: -85px;\r\n                    text-overflow: ellipsis;\r\n                    white-space: nowrap;\r\n                    overflow: hidden;\r\n                    width: 90%;\r\n                    padding: 0 5px;\r\n\r\n                    @media (max-width: $screen-md-min) { \r\n                        width: 400px;\r\n                        max-width: 400px;\r\n                        right: auto !important;\r\n                        font-weight: 400;\r\n                        display: none;\r\n                        transform: translateX(-50%);\r\n                    }\r\n                }\r\n\r\n                span:not(.step) {\r\n                    display: block;\r\n                    margin: 0;\r\n                    line-height: 1.5;\r\n\r\n                    @media (max-width: $screen-md-min) { \r\n                        font-size: 18px;\r\n                        color: $primary-neutral;\r\n                        display: none;\r\n                    }\r\n                }\r\n\r\n                span.step {\r\n                    display: none;\r\n                    font-size: 12px;\r\n                    color: $neutral-80;\r\n\r\n                    @media (max-width: $screen-md-min) { \r\n                        top: -52px;\r\n                    }\r\n                }\r\n\r\n            }\r\n\r\n            &:first-child {\r\n                width: 30px;\r\n                flex: 0 30px;\r\n                position: absolute;\r\n                left: 0px;\r\n\r\n                @media (max-width: $screen-md-min) { \r\n                    position: relative; \r\n                    width: 9px;    \r\n                    right: auto;    \r\n                    left: auto;    \r\n                }\r\n\r\n                \r\n                > a {\r\n                    width: 30px;\r\n\r\n                    @media (max-width: $screen-md-min) { \r\n                        width: auto;\r\n                    }\r\n\r\n                    &:after { display: none; }\r\n\r\n                    span:not(.step) {\r\n                        min-width: 150px;\r\n                        right: -65px;\r\n                    }\r\n                }\r\n            }\r\n\r\n            &.active {\r\n                @media (max-width: $screen-md-min) { \r\n                    width: 11px;\r\n                }\r\n\r\n                > a {\r\n                    color: $blue-50;\r\n                    font-weight: 700;\r\n                    font-size: 16px;\r\n\r\n                    &:before {\r\n                        width: 40px;\r\n                        height: 40px;\r\n                        border-radius: 40px;\r\n                        border: 15px solid $blue-50;\r\n                        background: #cce4f5;\r\n                        bottom: -2px;\r\n                        box-shadow: shadow(30) rgba($blue-50, 0.3);\r\n\r\n                        @media (max-width: $screen-md-min) {\r\n                            width: 7px;\r\n                            height: 7px;\r\n                            border: 0;\r\n                            background: $blue-50;\r\n                            bottom: -6px;\r\n                        }\r\n                    }\r\n\r\n                    span:not(.step) { \r\n                        right: -80px; \r\n                        top: -2px; \r\n\r\n                        @media (max-width: $screen-md-min) {\r\n                            top: -38px;\r\n                            display: block;\r\n                        }\r\n                    }\r\n\r\n                    span.step {\r\n                        @media (max-width: $screen-md-min) { display: block; }\r\n                    }\r\n                }\r\n            }\r\n\r\n            &.passed {\r\n                > a {\r\n                    color: $green-60;\r\n\r\n                    &:after { background: $green-60; }\r\n\r\n                    &:before {\r\n                        background-color: $green-60;\r\n                        background-image: url(\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='15.327' height='12.68' viewBox='0 0 15.327 12.68'%3E%3Cpath id='Check_icon' data-name='Check icon' d='M1390.032,6809.558l-1.224,1.241s2.446,2.771,4.64,5.57c5.736-6.936,10.687-11.882,10.687-11.882l-.736-.8a56.256,56.256,0,0,0-9.845,9.265A31.24,31.24,0,0,0,1390.032,6809.558Z' transform='translate(-1388.808 -6803.689)' fill='%23fff'/%3E%3C/svg%3E%0A\");\r\n                        background-repeat: no-repeat;\r\n                        background-position: center;\r\n                        box-shadow: shadow(30) rgba($green-60, 0.2);\r\n\r\n                        @media (max-width: $screen-md-min) {\r\n                            background-image: none;\r\n                        }\r\n                    }\r\n                }\r\n\r\n\r\n                + .active {\r\n                    > a {\r\n                        &:after {  \r\n                            background: linear-gradient(90deg, $green-60 0%, $blue-50 50%, $neutral-50 50%, $neutral-50 100%);\r\n                            background-size: 200% auto;\r\n                            background-position-x: 0%;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n\r\n            @media (max-width: $screen-md-min) {\r\n                &:first-child > a span { left: calc(50% - -38px); }\r\n                &:nth-child(2) > a span { left: calc(50% - -26px); }\r\n                &:nth-child(3) > a span { left: calc(50% - -13px); }\r\n                &:nth-child(4) > a span { left: calc(50% - -1px); }\r\n                &:nth-child(5) > a span { left: calc(50% - 12px); }\r\n                &:nth-child(6) > a span { left: calc(50% - 25px); }\r\n                &:nth-child(7) > a span { left: calc(50% - 37px); }\r\n            }\r\n\r\n            /* six items in the stepper  */\r\n            &:first-child:nth-last-child(6),\r\n            &:first-child:nth-last-child(6) ~ li {\r\n                > a span:not(.step) {\r\n                    @media (max-width: $screen-lg-min) { right: -63px; }\r\n                }\r\n\r\n                &.active {\r\n                    > a span:not(.step) {\r\n                        @media (min-width: $screen-md-min + 1) and (max-width: $screen-lg-min) { right: -55px; }\r\n                    }\r\n                }\r\n            }\r\n\r\n            /* seven items in the stepper  */\r\n            &:first-child:nth-last-child(7),\r\n            &:first-child:nth-last-child(7) ~ li {\r\n                > a span:not(.step) {\r\n                    @media (max-width: $screen-xl-min) { right: -70px; }\r\n                    @media (max-width: $screen-lg-min) { right: -50px; }\r\n                }\r\n\r\n                &.active {\r\n                    > a span:not(.step) {\r\n                        @media (min-width: $screen-md-min + 1) and (max-width: $screen-lg-min) { right: -55px; }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n} // END '.stepper'","\r\n// Vertical stepper\r\n\r\n.stepper.stepper-vertical {\r\n    ul {\r\n        flex-direction: column;\r\n        padding-left: 0;\r\n\r\n        > li,\r\n        > li:first-child {\r\n            max-width: 100%;\r\n            width: auto;\r\n            position: relative;\r\n        }\r\n\r\n        > li {\r\n            > a {\r\n                &:after {\r\n                    width: 3px;\r\n                    height: 100%;\r\n                }\r\n\r\n                &:before {\r\n                    top: 0;\r\n                    bottom: auto;\r\n                    right: auto;\r\n                    left: 0;\r\n                }\r\n            }\r\n\r\n            \r\n        }\r\n    }\r\n}\r\n\r\n\r\n\r\n// Stepper vertical inside a container\r\n.stepper.stepper-vertical.stepper-content {\r\n    ul {\r\n        > li {\r\n            box-shadow: 0 1px 1px rgba($blue-90, 0.1);\r\n            background: $white;\r\n            padding: 25px;\r\n            border-radius: $border-radius-10;\r\n            margin-bottom: 20px;\r\n\r\n            > a {\r\n                min-height: 30px;\r\n\r\n                &:after {\r\n                    height: calc(100% + 55px);\r\n                    top: calc(-100% + -55px);\r\n                }\r\n            }\r\n\r\n            .panel { \r\n                opacity: 0;\r\n                visibility: hidden;\r\n                height: 0;\r\n                box-shadow: none;\r\n                padding-left: 40px;\r\n                margin: 0;\r\n            }\r\n\r\n            &.active {\r\n                &:not(:last-child):after {\r\n                    left: 43px;\r\n                }\r\n\r\n                .panel { \r\n                    opacity: 1;\r\n                    visibility: visible;\r\n                    height: 100%;\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n}\r\n","\n// NC v4.0 variables\n//\n//=== Table of Contents:\n//\n//  1. Imports\n//  2. Color palette\n//  3. Path variables\n//  4. Typography\n//  5. Responsivness\n//  6. Grids\n//  7. Z-index variable\n//  8. Borders\n//  9. Image thumbnails\n// 10.\n// 11. \n\n\n//=== 1. Imports\n//# Default Settings\n@import 'config';\n\n//# Project Settings, modify the default settings\n@import 'custom-settings';\n\n//# Functions and Mixins\n@import '../utilities/functions';\n@import '../utilities/mixins'; \n\n\n//=== 2. Color palette\n//# \n$white: #ffffff;\n$black: #000000;\n\n\n//# Main colors palette\n//### Neutral palette\n$primary-neutral: #252626;\n\n$neutral-90: $primary-neutral;\n$neutral-80: #6a6c6d;\n$neutral-70: #959799;\n$neutral-60: #aaacae;\n$neutral-50: #c1c3c5;\n$neutral-40: #d9dcde; \n$neutral-30: #e3e6e8;\n$neutral-20: #f0f2f5;\n$neutral-10: #f7f9fa;\n$neutral-05: $white;\n\n\n//### Blue palette\n$primary-blue: #007aca;\n\n$blue-90: #163e59;\n$blue-80: #0060a1;\n$blue-70: #0071bd;\n$blue-60: $blue-90; \n$blue-50: #0087e0;\n$blue-40: #1c98eb;\n$blue-30: #5bb4f0;\n$blue-20: #96d2fa;\n$blue-10: #dceefa;\n$blue-05: #ebf7ff;\n\n\n//### Green palette\n$primary-green: #4d8400;\n\n$green-90: #305200;\n$green-80: #3b6600;\n$green-70: $primary-green;\n$green-60: #68a611;\n$green-50: #7fb435;\n$green-40: #99c35d;\n$green-30: #b0d182;\n$green-20: #cfe5ae;\n$green-10: #e4f0d3;\n$green-05: #f4faeb;\n\n\n//### Red palette\n$primary-red: #D93644;\n\n$red-90: #a6000e;\n$red-80: #d11525;\n$red-70: $primary-red;\n$red-60: #e04c59;\n$red-50: #f2616d;\n$red-40: #f0828c;\n$red-30: #feb0b7;\n$red-20: #ffd4d8;\n$red-10: #ffe5e7;\n$red-05: #fff2f3;\n\n\n//### Orange palette\n$primary-orange: #b35300;\n\n$orange-90: $primary-orange;\n$orange-80: #d76500;\n$orange-70: #f28d00;\n$orange-60: #ffaa33;\n$orange-50: #ffc46f;\n$orange-40: #eecf8b;\n$orange-30: #ffdaa4;\n$orange-20: #ffeacc;\n$orange-10: #fff4e5;\n$orange-05: #fffcf5;\n\n\n//# Maps\n//### Shadow map\n$shadow-map: (\n    50: (\n        distance: 15px,\n        size: 40px\n    ),\n    40: (\n        distance: 10px,\n        size: 15px\n    ),\n    30: (\n        distance: 5px,\n        size: 10px\n    ),\n    20: (\n        distance: 2px,\n        size: 4px\n    ),\n    10: (\n        distance: 1px,\n        size: 1px\n    )\n);\n\n\n\n//=== 3. Path variables\n$image-path: '../img' !default;\n$font-path: '../fonts' !default;\n$icons-path: '#{$image-path}/vismaicons' !default;\n$tabs-graph-path: $image-path + '/tabs' !default;\n\n\n\n//=== 4. Typography \n$font-size-base: 14px;\n$line-height-base: 145%;\n\n$font-weight-base: normal;\n$font-family-base: 'OpenSansFallback', 'Open Sans', sans-serif;\n$font-family-secondary: 'UbuntuFallback', 'Ubuntu', sans-serif;\n\n\n\n//### Main font-size\n// font-weight\n$bold: 700;\n$semibold: 600;\n$normal: 400;\n$thin: 200;\n\n// font-size/line-height font-family\n$font-xl: 24px/30px $font-family-base;\n$font-lg: 20px/30px $font-family-base;\n$font-md: 16px/24px $font-family-base;\n$font-sm: 14px/18px $font-family-base;\n$font-xs: 12px/14px $font-family-base;\n\n\n\n//=== 5. Responsivness\n// main screen sizes\n$screen-xxl-min: 1680px;\n$screen-xl-min: 1440px;\n$screen-lg-min: 1280px;\n$screen-md-min: 992px;\n$screen-sm-min: 769px;\n$screen-xs-min: 550px;\n \n$screen-xxl-max: 1679px;\n$screen-xl-max: 1439px;\n$screen-lg-max: 1279px;\n$screen-md-max: 991px;\n$screen-sm-max: 768px;\n$screen-xs-max: 549px;\n\n\n\n//=== 6. Grids\n// Grid breakpoints\n$grid-breakpoints: (\n    xxs: 0,\n    xs: $screen-xs-min,\n    sm: $screen-sm-min,\n    md: $screen-md-min,\n    lg: $screen-lg-min,\n    xl: $screen-xl-min,\n    xxl: $screen-xxl-min\n) !default;\n\n// Grid containers\n$container-max-widths: (\n    xxs: 100%, \n    xs: 90%,\n    sm: 90%,\n    md: 90%,\n    lg: $screen-lg-min - 30px,\n    xl: $screen-xl-min - 30px,\n    xxl: $screen-xxl-min - 30px \n    ) !default;\n\n// Grid columns\n// Set the number of columns and specify the width of the gutters.\n$grid-columns:                12 !default;\n$grid-gutter-width:           30px !default;\n\n// Grid options - Quickly modify global styling by enabling or disabling optional features.\n$enable-grid-classes:       true !default;\n\n\n\n//=== 7. Z-index variable\n$zindex-button-active:        5;\n$zindex-button-focus:        10;\n$zindex-navbar-header:      900;\n$zindex-dropdown-backdrop:  990;\n$zindex-dropdown:          1000;\n$zindex-navbar:            1000;\n$zindex-navbar-dropdown:   1010;\n$zindex-fixed:             1030;\n$zindex-sticky:            1030;\n$zindex-modal-backdrop:    1040;\n$zindex-modal:             1050;\n$zindex-popover:           1060;\n$zindex-tooltip:           1070;\n\n\n\n//=== 8. Borders\n$border-color: $neutral-50 !default;\n$border-width: 1px !default;\n\n$border-radius-5: 5px !default; \n$border-radius-10: 10px;  \n$border-radius-20: 20px; \n$border-radius-circle: 100%; \n$border-radius: $border-radius-5 !default; \n\n\n\n//=== 9. Image thumbnails\n$thumbnail-padding: .25rem !default;\n$thumbnail-bg: $white !default;\n$thumbnail-border-width: $border-width !default;\n$thumbnail-border-color: $border-color !default;\n$thumbnail-border-radius: $border-radius !default;\n// $thumbnail-box-shadow: 0 1px 2px rgba($black, .075) !default;\n","\r\n\r\n// Stepper transitions\r\n.stepper {\r\n    &.transition {\r\n        ul {\r\n            li.active {\r\n                @media (min-width: $screen-md-min) {\r\n                    > a {\r\n                        animation: active-font 0.1s linear;\r\n                        -webkit-animation: active-font 0.1s linear;\r\n\r\n                        &::after {\r\n                            animation: progress-bar 0.75s linear;\r\n                            -webkit-animation: progress-bar 0.75s linear;\r\n                        }\r\n\r\n                        &::before {\r\n                            animation: bullet 0.1s linear;\r\n                            -webkit-animation: bullet 0.1s linear;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n    }\r\n} \r\n\r\n\r\n// Transitions\r\n@keyframes progress-bar {\r\n    0% { background-position: 100% 100%; }\r\n    100% { background-position: 0% 0%; }\r\n}\r\n\r\n@keyframes bullet {\r\n    0% { border-width: 0; }\r\n    100% { border-width: 15px; }\r\n}\r\n\r\n@keyframes active-font {\r\n    0% { font-weight: 500; }\r\n    100% { border-width: 700; }\r\n}","\r\n// Imports\r\n@import '../settings/variables';\r\n\r\n\r\n// Stepper 'Configuration'\r\n//=== Basic style - Default\r\n@import 'stepper/stepper-base';\r\n\r\n\r\n//=== Vertical style\r\n@import 'stepper/stepper-vertical';\r\n\r\n\r\n//=== Transitions \r\n@import 'stepper/stepper-transitions';\r\n\r\n\r\n\r\n// Stepper\r\n\r\nbody.nav-space {   \r\n    @media (max-width: $screen-md-min) { \r\n        .stepper {\r\n            top: 115px;\r\n\r\n            + .container { margin-top: 115px; }\r\n        }\r\n    }\r\n} // this applies for the case where the top navigation has 2 levels\r\n\r\nbody {\r\n    @media (max-width: $screen-sm-min) { \r\n        .stepper {\r\n            top: 67px;\r\n\r\n            + .container { margin-top: 70px; }\r\n        }\r\n    }\r\n} \r\n\r\n.stepper {\r\n    @include make-container();\r\n    @include make-container-max-widths(); \r\n    margin: 0 auto 50px;\r\n    padding: 0 30px;\r\n    \r\n    @media (max-width: $screen-md-min) { \r\n        background: $white;\r\n        box-shadow: 0 2px 6px rgba($blue-90, 0.1);\r\n        position: absolute;\r\n        width: 100%;\r\n        max-width: 100%;\r\n        top: 65px;\r\n        left: 0;\r\n        height: 66px;\r\n\r\n        + .container { margin-top: 65px; }\r\n    }\r\n\r\n    ul {\r\n        display: flex;\r\n        flex-direction: row;\r\n        flex-wrap: nowrap;\r\n        position: relative;\r\n\r\n        @media (max-width: $screen-md-min) { \r\n            background: $white;\r\n            box-shadow: 0 2px 6px rgba($blue-90, 0.1);\r\n            padding: 11px 21px 10px 25px;\r\n            left: 50%;\r\n            transform: translateX(-50%);\r\n            width: auto;\r\n            display: inline-block;\r\n            height: 33px;\r\n            border-radius: 25px;\r\n            margin: 0 auto;\r\n            top: 48px;\r\n\r\n            &:before {\r\n                content: \"\";\r\n                width: 110%;\r\n                height: 17px;\r\n                background-color: $white;\r\n                position: absolute;\r\n                top: 1px;\r\n                display: block;\r\n                left: -5%;\r\n                z-index: 1;\r\n            }\r\n        }\r\n\r\n        > li {\r\n            position: relative;\r\n            cursor: pointer;\r\n            flex: 1;\r\n            margin: 0;\r\n            padding: 0;\r\n            display: inline-block;\r\n            height: 100%;\r\n            flex: 1 100%;\r\n            text-align: center;\r\n            cursor: default;\r\n            text-overflow: ellipsis;\r\n            white-space: nowrap;\r\n\r\n            @media (max-width: $screen-md-min) { \r\n                width: 9px;\r\n                right: auto;\r\n                left: auto;\r\n            }\r\n\r\n            > a {\r\n                color: $primary-neutral;\r\n                font-size: $font-size-base;\r\n                text-decoration: none;\r\n                text-align: center;\r\n                outline: 0;\r\n                color: $neutral-80;\r\n                position: relative;\r\n                display: block;\r\n                width: 100%;\r\n                min-height: 75px;\r\n\r\n                @media (max-width: $screen-md-min) { \r\n                    margin: 0 0 10px 0;\r\n                    width: auto;\r\n                    min-height: auto;\r\n                }\r\n\r\n                &:before,\r\n                &:after {\r\n                    content: '';\r\n                    display: block;\r\n                    margin: 0 auto;\r\n                    position: absolute;\r\n                    top: auto;\r\n                    background: $neutral-50;\r\n                }\r\n\r\n                &:after {\r\n                    width: 100%;\r\n                    height: 3px;\r\n                    right: auto;\r\n                    left: auto;\r\n                    bottom: 17px;\r\n                    width: 100%;\r\n                    background-color: $neutral-50;\r\n\r\n                    @media (max-width: $screen-md-min) { \r\n                        display: none;\r\n                    }\r\n                }\r\n\r\n                &:before {\r\n                    width: 30px;\r\n                    height: 30px;\r\n                    border-radius: 30px;\r\n                    right: 0;\r\n                    left: auto;\r\n                    bottom: 4px;\r\n                    z-index: 20;\r\n\r\n                    @media (max-width: $screen-md-min) { \r\n                        width: 5px;\r\n                        height: 5px;\r\n                        bottom: auto;\r\n                        right: auto;\r\n                    }\r\n                }\r\n\r\n                span {\r\n                    position: absolute;\r\n                    max-width: 200px;\r\n                    text-align: center;\r\n                    left: auto;\r\n                    right: -85px;\r\n                    text-overflow: ellipsis;\r\n                    white-space: nowrap;\r\n                    overflow: hidden;\r\n                    width: 90%;\r\n                    padding: 0 5px;\r\n\r\n                    @media (max-width: $screen-md-min) { \r\n                        width: 400px;\r\n                        max-width: 400px;\r\n                        right: auto !important;\r\n                        font-weight: 400;\r\n                        display: none;\r\n                        transform: translateX(-50%);\r\n                    }\r\n                }\r\n\r\n                span:not(.step) {\r\n                    display: block;\r\n                    margin: 0;\r\n                    line-height: 1.5;\r\n\r\n                    @media (max-width: $screen-md-min) { \r\n                        font-size: 18px;\r\n                        color: $primary-neutral;\r\n                        display: none;\r\n                    }\r\n                }\r\n\r\n                span.step {\r\n                    display: none;\r\n                    font-size: 12px;\r\n                    color: $neutral-80;\r\n\r\n                    @media (max-width: $screen-md-min) { \r\n                        top: -52px;\r\n                    }\r\n                }\r\n\r\n            }\r\n\r\n            &:first-child {\r\n                width: 30px;\r\n                flex: 0 30px;\r\n                position: absolute;\r\n                left: 0px;\r\n\r\n                @media (max-width: $screen-md-min) { \r\n                    position: relative; \r\n                    width: 9px;    \r\n                    right: auto;    \r\n                    left: auto;    \r\n                }\r\n\r\n                \r\n                > a {\r\n                    width: 30px;\r\n\r\n                    @media (max-width: $screen-md-min) { \r\n                        width: auto;\r\n                    }\r\n\r\n                    &:after { display: none; }\r\n\r\n                    span:not(.step) {\r\n                        min-width: 150px;\r\n                        right: -65px;\r\n                    }\r\n                }\r\n            }\r\n\r\n            &.active {\r\n                @media (max-width: $screen-md-min) { \r\n                    width: 11px;\r\n                }\r\n\r\n                > a {\r\n                    color: $blue-50;\r\n                    font-weight: 700;\r\n                    font-size: 16px;\r\n\r\n                    &:before {\r\n                        width: 40px;\r\n                        height: 40px;\r\n                        border-radius: 40px;\r\n                        border: 15px solid $blue-50;\r\n                        background: #cce4f5;\r\n                        bottom: -2px;\r\n                        box-shadow: shadow(30) rgba($blue-50, 0.3);\r\n\r\n                        @media (max-width: $screen-md-min) {\r\n                            width: 7px;\r\n                            height: 7px;\r\n                            border: 0;\r\n                            background: $blue-50;\r\n                            bottom: -6px;\r\n                        }\r\n                    }\r\n\r\n                    span:not(.step) { \r\n                        right: -80px; \r\n                        top: -2px; \r\n\r\n                        @media (max-width: $screen-md-min) {\r\n                            top: -38px;\r\n                            display: block;\r\n                        }\r\n                    }\r\n\r\n                    span.step {\r\n                        @media (max-width: $screen-md-min) { display: block; }\r\n                    }\r\n                }\r\n            }\r\n\r\n            &.passed {\r\n                > a {\r\n                    color: $green-60;\r\n\r\n                    &:after { background: $green-60; }\r\n\r\n                    &:before {\r\n                        background-color: $green-60;\r\n                        background-image: url(\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='15.327' height='12.68' viewBox='0 0 15.327 12.68'%3E%3Cpath id='Check_icon' data-name='Check icon' d='M1390.032,6809.558l-1.224,1.241s2.446,2.771,4.64,5.57c5.736-6.936,10.687-11.882,10.687-11.882l-.736-.8a56.256,56.256,0,0,0-9.845,9.265A31.24,31.24,0,0,0,1390.032,6809.558Z' transform='translate(-1388.808 -6803.689)' fill='%23fff'/%3E%3C/svg%3E%0A\");\r\n                        background-repeat: no-repeat;\r\n                        background-position: center;\r\n                        box-shadow: shadow(30) rgba($green-60, 0.2);\r\n\r\n                        @media (max-width: $screen-md-min) {\r\n                            background-image: none;\r\n                        }\r\n                    }\r\n                }\r\n\r\n\r\n                + .active {\r\n                    > a {\r\n                        &:after {  \r\n                            background: linear-gradient(90deg, $green-60 0%, $blue-50 50%, $neutral-50 50%, $neutral-50 100%);\r\n                            background-size: 200% auto;\r\n                            background-position-x: 0%;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n\r\n            @media (max-width: $screen-md-min) {\r\n                &:first-child > a span { left: calc(50% - -38px); }\r\n                &:nth-child(2) > a span { left: calc(50% - -26px); }\r\n                &:nth-child(3) > a span { left: calc(50% - -13px); }\r\n                &:nth-child(4) > a span { left: calc(50% - -1px); }\r\n                &:nth-child(5) > a span { left: calc(50% - 12px); }\r\n                &:nth-child(6) > a span { left: calc(50% - 25px); }\r\n                &:nth-child(7) > a span { left: calc(50% - 37px); }\r\n            }\r\n\r\n            /* six items in the stepper  */\r\n            &:first-child:nth-last-child(6),\r\n            &:first-child:nth-last-child(6) ~ li {\r\n                > a span:not(.step) {\r\n                    @media (max-width: $screen-lg-min) { right: -63px; }\r\n                }\r\n\r\n                &.active {\r\n                    > a span:not(.step) {\r\n                        @media (min-width: $screen-md-min + 1) and (max-width: $screen-lg-min) { right: -55px; }\r\n                    }\r\n                }\r\n            }\r\n\r\n            /* seven items in the stepper  */\r\n            &:first-child:nth-last-child(7),\r\n            &:first-child:nth-last-child(7) ~ li {\r\n                > a span:not(.step) {\r\n                    @media (max-width: $screen-xl-min) { right: -70px; }\r\n                    @media (max-width: $screen-lg-min) { right: -50px; }\r\n                }\r\n\r\n                &.active {\r\n                    > a span:not(.step) {\r\n                        @media (min-width: $screen-md-min + 1) and (max-width: $screen-lg-min) { right: -55px; }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    &.transition {\r\n        ul {\r\n            li.active {\r\n                @media (min-width: $screen-md-min) {\r\n                    > a {\r\n                        animation: active-font 0.1s linear;\r\n                        -webkit-animation: active-font 0.1s linear;\r\n\r\n                        &::after {\r\n                            animation: progress-bar 0.75s linear;\r\n                            -webkit-animation: progress-bar 0.75s linear;\r\n                        }\r\n\r\n                        &::before {\r\n                            animation: bullet 0.1s linear;\r\n                            -webkit-animation: bullet 0.1s linear;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n    }\r\n} // END '.stepper'\r\n\r\n\r\n// Transitions\r\n@-webkit-keyframes progress-bar {\r\n    0% { background-position: 100% 100%; }\r\n    100% { background-position: 0% 0%; }\r\n}\r\n\r\n@-webkit-keyframes bullet {\r\n    0% { border-width: 0; }\r\n    100% { border-width: 15px; }\r\n}\r\n\r\n@-webkit-keyframes active-font {\r\n    0% { font-weight: 500; }\r\n    100% { border-width: 700; }\r\n}","//### 'clearfix' mixin used on wrappers with floats elements\n@mixin clearfix() {\n    &::after {\n        display: block;\n        visibility: hidden;\n        content: \"\";\n        clear: both;\n\n        height: 0;\n    }\n}\n\n\n//### Grid system\n// Generate semantic grid columns with these mixins.\n@mixin make-container() {\n    width: 100%;\n    // padding-right: ($grid-gutter-width / 2);\n    // padding-left: ($grid-gutter-width / 2);\n    padding-right: $grid-gutter-width;\n    padding-left: $grid-gutter-width;\n    margin-right: auto;\n    margin-left: auto;\n    } \n  \n// For each breakpoint, define the maximum width of the container in a media query\n@mixin make-container-max-widths($max-widths: $container-max-widths, $breakpoints: $grid-breakpoints) {\n    @each $breakpoint, $container-max-width in $max-widths {\n        @include media-breakpoint-up($breakpoint, $breakpoints) {\n        max-width: $container-max-width;\n        }\n    }\n}\n  \n@mixin make-row() {\n    display: flex;\n    flex-wrap: wrap;\n    margin-right: ($grid-gutter-width / -2);\n    margin-left: ($grid-gutter-width / -2);\n    }\n\n@mixin make-col-ready() {\n    position: relative;\n    // Prevent columns from becoming too narrow when at smaller grid tiers by always setting `width: 100%;`. This works because we use `flex` values later on to override this initial width.\n    width: 100%;\n    min-height: 1px; // Prevent collapsing\n    padding-right: ($grid-gutter-width / 2);\n    padding-left: ($grid-gutter-width / 2);\n    }\n  \n@mixin make-col($size, $columns: $grid-columns) {\n    flex: 0 0 percentage($size / $columns);\n    // Add a `max-width` to ensure content within each column does not blow out the width of the column. Applies to IE10+ and Firefox. Chrome and Safari do not appear to require this.\n    max-width: percentage($size / $columns);\n    }\n\n@mixin make-col-offset($size, $columns: $grid-columns) {\n    $num: $size / $columns;\n    margin-left: if($num == 0, 0, percentage($num));\n    }\n\n@mixin make-grid-columns($columns: $grid-columns, $gutter: $grid-gutter-width, $breakpoints: $grid-breakpoints) {\n    // Common properties for all breakpoints \n    %grid-column {\n      position: relative;\n      width: 100%;\n      min-height: 1px; // Prevent columns from collapsing when empty\n      padding-right: ($gutter / 2);\n      padding-left: ($gutter / 2);\n    }\n  \n    @each $breakpoint in map-keys($breakpoints) {\n      $infix: breakpoint-infix($breakpoint, $breakpoints);\n      // Allow columns to stretch full width below their breakpoints\n      @for $i from 1 through $columns {\n        .col#{$infix}-#{$i} {\n          @extend %grid-column;\n        }\n      }\n\n      .col#{$infix},\n      .col#{$infix}-auto {\n        @extend %grid-column; \n      }\n  \n      @include media-breakpoint-up($breakpoint, $breakpoints) {\n        // Provide basic `.col-{bp}` classes for equal-width flexbox columns\n        .col#{$infix} {\n          flex-basis: 0;\n          flex-grow: 1;\n          max-width: 100%;\n        }\n\n        .col#{$infix}-auto {\n          flex: 0 0 auto;\n          width: auto;\n          max-width: none; // Reset earlier grid tiers\n        }\n  \n        @for $i from 1 through $columns {\n          .col#{$infix}-#{$i} {\n            @include make-col($i, $columns);\n          }\n        }\n  \n        .order#{$infix}-first { order: -1; }\n  \n        .order#{$infix}-last { order: $columns + 1; }\n  \n        @for $i from 0 through $columns {\n          .order#{$infix}-#{$i} { order: $i; }\n        }\n  \n        // `$columns - 1` because offsetting by the width of an entire row isn't possible\n        @for $i from 0 through ($columns - 1) {\n          @if not ($infix == \"\" and $i == 0) { // Avoid emitting useless .offset-0\n            .offset#{$infix}-#{$i} {\n              @include make-col-offset($i, $columns);\n            }\n          }\n        }\n      }\n    }\n  }\n\n\n\n// Responsive image. Keep images from scaling beyond the width of their parents.\n@mixin img-fluid() {\n  max-width: 100%;\n  height: auto;\n}\n\n// Single side border-radius\n@mixin border-radius($radius: $border-radius) {\n  border-radius: $radius;\n}\n\n@mixin border-top-radius($radius) {\n  border-top-left-radius: $radius;\n  border-top-right-radius: $radius;\n}\n\n@mixin border-right-radius($radius) {\n  border-top-right-radius: $radius;\n  border-bottom-right-radius: $radius;\n}\n\n@mixin border-bottom-radius($radius) {\n  border-bottom-right-radius: $radius;\n  border-bottom-left-radius: $radius;\n}\n\n@mixin border-left-radius($radius) {\n  border-top-left-radius: $radius;\n  border-bottom-left-radius: $radius;\n}\n\n@mixin border-top-left-radius($radius) {\n  border-top-left-radius: $radius;\n}\n\n@mixin border-top-right-radius($radius) {\n  border-top-right-radius: $radius;\n}\n\n@mixin border-bottom-right-radius($radius) {\n  border-bottom-right-radius: $radius;\n}\n\n@mixin border-bottom-left-radius($radius) {\n  border-bottom-left-radius: $radius;\n}\n\n@mixin text-overflow {\n  overflow: hidden;\n  text-overflow: ellipsis;\n  white-space: nowrap;\n}\n","//### Return propiety for box-shadow from 'Shadow map'\r\n@function shadow($base) {\r\n  @if map-has-key($map: $shadow-map, $key: $base) {\r\n      $map-info: map-get($map: $shadow-map, $key: $base);\r\n      @return 0 map-get($map: $map-info, $key: distance) map-get($map: $map-info, $key: size) 0;\r\n  }\r\n  \r\n  @warn \"The key #{$base} is not in the map: '$hadow-map'\";\r\n  @return null;\r\n}\r\n\r\n\r\n// Breakpoint viewport sizes and media queries.\r\n// Breakpoints are defined as a map of (name: minimum width), order from small to large:\r\n//    (xxs: 0px, xs: 550px, sm: 769px, md: 992px, lg: 1280px, xl: 1440px)\r\n// The map defined in the `$grid-breakpoints` global variable is used as the `$breakpoints` argument by default.\r\n\r\n// Name of the next breakpoint, or null for the last breakpoint.\r\n//    >> breakpoint-next(sm)\r\n//    md\r\n//    >> breakpoint-next(sm, (xxs: 0px, xs: 550px, sm: 769px, md: 992px, lg: 1280px, xl: 1440px))\r\n//    md\r\n//    >> breakpoint-next(sm, $breakpoint-names: (xs sm md lg xl))\r\n//    md\r\n@function breakpoint-next($name, $breakpoints: $grid-breakpoints, $breakpoint-names: map-keys($breakpoints)) {\r\n  $n: index($breakpoint-names, $name);\r\n  @return if($n < length($breakpoint-names), nth($breakpoint-names, $n + 1), null);\r\n}\r\n\r\n// Minimum breakpoint width. Null for the smallest (first) breakpoint.\r\n//    >> breakpoint-min(sm, (xxs: 0px, xs: 550px, sm: 769px, md: 992px, lg: 1280px, xl: 1440px))\r\n//    769px\r\n@function breakpoint-min($name, $breakpoints: $grid-breakpoints) {\r\n$min: map-get($breakpoints, $name);\r\n@return if($min != 0, $min, null);\r\n}\r\n\r\n// Maximum breakpoint width. Null for the largest (last) breakpoint.\r\n// The maximum value is calculated as the minimum of the next one less 0.02px to work around the limitations of `min-` and `max-` prefixes and viewports with fractional widths.\r\n// See https://www.w3.org/TR/mediaqueries-4/#mq-min-max\r\n// Uses 0.02px rather than 0.01px to work around a current rounding bug in Safari.\r\n// See https://bugs.webkit.org/show_bug.cgi?id=178261\r\n//    >> breakpoint-max(sm, (xxs: 0px, xs: 550px, sm: 769px, md: 992px, lg: 1280px, xl: 1440px))\r\n//    768.98px\r\n@function breakpoint-max($name, $breakpoints: $grid-breakpoints) {\r\n$next: breakpoint-next($name, $breakpoints);\r\n@return if($next, breakpoint-min($next, $breakpoints) - .02px, null);\r\n}\r\n\r\n// Returns a blank string if smallest breakpoint, otherwise returns the name with a dash infront.\r\n// Useful for making responsive utilities.\r\n//    >> breakpoint-infix(xxs, (xxs: 0px, xs: 550px, sm: 769px, md: 992px, lg: 1280px, xl: 1440px))\r\n//    \"\"  (Returns a blank string)\r\n//    >> breakpoint-infix(sm, (xxs: 0px, xs: 550px, sm: 769px, md: 992px, lg: 1280px, xl: 1440px))\r\n//    \"-sm\"\r\n@function breakpoint-infix($name, $breakpoints: $grid-breakpoints) {\r\n@return if(breakpoint-min($name, $breakpoints) == null, \"\", \"-#{$name}\");\r\n}\r\n\r\n// Media of at least the minimum breakpoint width. No query for the smallest breakpoint.\r\n// Makes the @content apply to the given breakpoint and wider.\r\n@mixin media-breakpoint-up($name, $breakpoints: $grid-breakpoints) {\r\n$min: breakpoint-min($name, $breakpoints);\r\n@if $min {\r\n  @media (min-width: $min) {\r\n    @content;\r\n  }\r\n} @else {\r\n  @content;\r\n}\r\n}\r\n\r\n// Media of at most the maximum breakpoint width. No query for the largest breakpoint.\r\n// Makes the @content apply to the given breakpoint and narrower.\r\n@mixin media-breakpoint-down($name, $breakpoints: $grid-breakpoints) {\r\n$max: breakpoint-max($name, $breakpoints);\r\n@if $max {\r\n  @media (max-width: $max) {\r\n    @content;\r\n  }\r\n} @else {\r\n  @content;\r\n}\r\n}\r\n\r\n// Media that spans multiple breakpoint widths.\r\n// Makes the @content apply between the min and max breakpoints\r\n@mixin media-breakpoint-between($lower, $upper, $breakpoints: $grid-breakpoints) {\r\n$min: breakpoint-min($lower, $breakpoints);\r\n$max: breakpoint-max($upper, $breakpoints);\r\n\r\n@if $min != null and $max != null {\r\n  @media (min-width: $min) and (max-width: $max) {\r\n    @content;\r\n  }\r\n} @else if $max == null {\r\n  @include media-breakpoint-up($lower, $breakpoints) {\r\n    @content;\r\n  }\r\n} @else if $min == null {\r\n  @include media-breakpoint-down($upper, $breakpoints) {\r\n    @content;\r\n  }\r\n}\r\n}\r\n\r\n// Media between the breakpoint's minimum and maximum widths.\r\n// No minimum for the smallest breakpoint, and no maximum for the largest one.\r\n// Makes the @content apply only to the given breakpoint, not viewports any wider or narrower.\r\n@mixin media-breakpoint-only($name, $breakpoints: $grid-breakpoints) {\r\n$min: breakpoint-min($name, $breakpoints);\r\n$max: breakpoint-max($name, $breakpoints);\r\n\r\n@if $min != null and $max != null {\r\n  @media (min-width: $min) and (max-width: $max) {\r\n    @content;\r\n  }\r\n} @else if $max == null {\r\n  @include media-breakpoint-up($name, $breakpoints) {\r\n    @content;\r\n  }\r\n} @else if $min == null {\r\n  @include media-breakpoint-down($name, $breakpoints) {\r\n    @content;\r\n  }\r\n}\r\n}\r\n\r\n\r\n/// Replace `$search` with `$replace` in `$string`\r\n/// @author Hugo Giraudel\r\n/// @param {String} $string - Initial string\r\n/// @param {String} $search - Substring to replace\r\n/// @param {String} $replace ('') - New value\r\n/// @return {String} - Updated string\r\n@function str-replace($string, $search, $replace: '') {\r\n$index: str-index($string, $search);\r\n\r\n@if $index {\r\n  @return str-slice($string, 1, $index - 1) + $replace + str-replace(str-slice($string, $index + str-length($search)), $search, $replace);\r\n}\r\n\r\n@return $string;\r\n}\r\n\r\n\r\n// arrow tip for toolip and popover background image string definition.\r\n@function arrowTip($border: $neutral-05, $bg: $neutral-05) {\r\n$background-fill: str-replace('' + $bg, '#', '');\r\n$border-fill: str-replace('' + $border, '#', '');\r\n$result: \"data:image/svg+xml,%3Csvg%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%20width%3D%2210%22%20height%3D%2226%22%20viewBox%3D%220%200%2010%2026%22%3E%3Cg%3E%3Cg%20id%3D%22t%22%3E%3Cpath%20id%3D%22p1%22%20d%3D%22M11.427%2C23.5h-2V23a6.9%2C6.9%2C0%2C0%2C0-2.866-5.287L6.548%2C17.7l-.014-.01L1.521%2C14.017a2.5%2C2.5%2C0%2C0%2C1%2C0-4.032L6.459%2C6.363l.013-.009.012-.01A6.939%2C6.939%2C0%2C0%2C0%2C9.427%2C1V.5h2Z%22%20fill%3D%22%23\" + $background-fill + \"%22%2F%3E%3Cpath%20id%3D%22p2%22%20d%3D%22M10.927%2C23c.765-4.808%2C0-22%2C0-22h-1v.006A7.393%2C7.393%2C0%2C0%2C1%2C6.8%2C6.728l-.024.02-.025.018L1.817%2C10.388a2%2C2%2C0%2C0%2C0%2C0%2C3.225l5.012%2C3.675.029.021.027.023a7.463%2C7.463%2C0%2C0%2C1%2C3.042%2C5.662V23h1m1%2C1h-3V23a6.376%2C6.376%2C0%2C0%2C0-2.689-4.9L1.226%2C14.42a3%2C3%2C0%2C0%2C1%2C0-4.838L6.164%2C5.96C7.724%2C4.66%2C8.915%2C3.16%2C8.927%2C1V0h3Z%22%20fill%3D%22%23\" + $border-fill + \"%22%2F%3E%3C%2Fg%3E%3Crect%20id%3D%22m%22%20x%3D%229.9%22%20y%3D%22-1%22%20width%3D%222.2%22%20height%3D%2226%22%20fill%3D%22%23\" + $background-fill + \"%22%2F%3E%3C%2Fg%3E%3C%2Fsvg%3E\";\r\n\r\n@return $result;\r\n}\r\n\r\n\r\n\r\n\r\n\r\n     \r\n"]}